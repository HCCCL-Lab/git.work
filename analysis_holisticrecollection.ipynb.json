{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "29401851",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "6b686e7d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Event</th>\n",
       "      <th>Sound</th>\n",
       "      <th>Test</th>\n",
       "      <th>CorrAns</th>\n",
       "      <th>trials.thisRepN</th>\n",
       "      <th>trials.thisTrialN</th>\n",
       "      <th>trials.thisN</th>\n",
       "      <th>trials.thisIndex</th>\n",
       "      <th>trials_2.thisRepN</th>\n",
       "      <th>trials_2.thisTrialN</th>\n",
       "      <th>...</th>\n",
       "      <th>sound_3.started</th>\n",
       "      <th>image_5.started</th>\n",
       "      <th>sound_4.started</th>\n",
       "      <th>text_5.started</th>\n",
       "      <th>participant</th>\n",
       "      <th>session</th>\n",
       "      <th>date</th>\n",
       "      <th>expName</th>\n",
       "      <th>psychopyVersion</th>\n",
       "      <th>frameRate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>encoding/1/Event_01.jpg</td>\n",
       "      <td>encoding/1/PCS_1.wav</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>encoding/1/Event_02.jpg</td>\n",
       "      <td>encoding/1/PCS_2.wav</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>encoding/1/Event_03.jpg</td>\n",
       "      <td>encoding/1/PCS_3.wav</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>170</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Test/Block2/6/Test_Cb_Event_13.jpg</td>\n",
       "      <td>2.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Test/Block2/1/Test_Ab_Event_21.jpg</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Test/Block2/4/Test_Bc_Event_14.jpg</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Test/Block2/1/Test_Ab_Event_17.jpg</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>testn</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2022-07-15_08h48.19.837</td>\n",
       "      <td>HolisticMemory</td>\n",
       "      <td>2022-02-01</td>\n",
       "      <td>3.000961e+16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.759177e+15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>175 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Event                 Sound  \\\n",
       "0                        NaN                   NaN   \n",
       "1                        NaN                   NaN   \n",
       "2    encoding/1/Event_01.jpg  encoding/1/PCS_1.wav   \n",
       "3    encoding/1/Event_02.jpg  encoding/1/PCS_2.wav   \n",
       "4    encoding/1/Event_03.jpg  encoding/1/PCS_3.wav   \n",
       "..                       ...                   ...   \n",
       "170                      NaN                   NaN   \n",
       "171                      NaN                   NaN   \n",
       "172                      NaN                   NaN   \n",
       "173                      NaN                   NaN   \n",
       "174                      NaN                   NaN   \n",
       "\n",
       "                                   Test CorrAns  trials.thisRepN  \\\n",
       "0                                   NaN     NaN              NaN   \n",
       "1                                   NaN     NaN              NaN   \n",
       "2                                   NaN     NaN              0.0   \n",
       "3                                   NaN     NaN              0.0   \n",
       "4                                   NaN     NaN              0.0   \n",
       "..                                  ...     ...              ...   \n",
       "170  Test/Block2/6/Test_Cb_Event_13.jpg     2.0              NaN   \n",
       "171  Test/Block2/1/Test_Ab_Event_21.jpg     1.0              NaN   \n",
       "172  Test/Block2/4/Test_Bc_Event_14.jpg     1.0              NaN   \n",
       "173  Test/Block2/1/Test_Ab_Event_17.jpg     1.0              NaN   \n",
       "174                                 NaN     NaN              NaN   \n",
       "\n",
       "     trials.thisTrialN  trials.thisN  trials.thisIndex  trials_2.thisRepN  \\\n",
       "0                  NaN           NaN               NaN                NaN   \n",
       "1                  NaN           NaN               NaN                NaN   \n",
       "2                  0.0           0.0               0.0                NaN   \n",
       "3                  1.0           1.0               1.0                NaN   \n",
       "4                  2.0           2.0               2.0                NaN   \n",
       "..                 ...           ...               ...                ...   \n",
       "170                NaN           NaN               NaN                NaN   \n",
       "171                NaN           NaN               NaN                NaN   \n",
       "172                NaN           NaN               NaN                NaN   \n",
       "173                NaN           NaN               NaN                NaN   \n",
       "174                NaN           NaN               NaN                NaN   \n",
       "\n",
       "     trials_2.thisTrialN  ...  sound_3.started  image_5.started  \\\n",
       "0                    NaN  ...              NaN              NaN   \n",
       "1                    NaN  ...              NaN              NaN   \n",
       "2                    NaN  ...              NaN              NaN   \n",
       "3                    NaN  ...              NaN              NaN   \n",
       "4                    NaN  ...              NaN              NaN   \n",
       "..                   ...  ...              ...              ...   \n",
       "170                  NaN  ...              NaN              NaN   \n",
       "171                  NaN  ...              NaN              NaN   \n",
       "172                  NaN  ...              NaN              NaN   \n",
       "173                  NaN  ...              NaN              NaN   \n",
       "174                  NaN  ...              NaN              NaN   \n",
       "\n",
       "     sound_4.started  text_5.started  participant  session  \\\n",
       "0                NaN             NaN        testn      1.0   \n",
       "1                NaN             NaN        testn      1.0   \n",
       "2                NaN             NaN        testn      1.0   \n",
       "3                NaN             NaN        testn      1.0   \n",
       "4                NaN             NaN        testn      1.0   \n",
       "..               ...             ...          ...      ...   \n",
       "170              NaN             NaN        testn      1.0   \n",
       "171              NaN             NaN        testn      1.0   \n",
       "172              NaN             NaN        testn      1.0   \n",
       "173              NaN             NaN        testn      1.0   \n",
       "174              NaN    5.759177e+15          NaN      NaN   \n",
       "\n",
       "                        date         expName  psychopyVersion     frameRate  \n",
       "0    2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "1    2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "2    2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "3    2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "4    2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "..                       ...             ...              ...           ...  \n",
       "170  2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "171  2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "172  2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "173  2022-07-15_08h48.19.837  HolisticMemory       2022-02-01  3.000961e+16  \n",
       "174                      NaN             NaN              NaT           NaN  \n",
       "\n",
       "[175 rows x 56 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_excel('/Users/nazli/Desktop/testn_HolisticMemory_2022-07-15_08h48.19.837 1.xlsx')\n",
    "data_df = pd.DataFrame(df)\n",
    "data_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "57a64355",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                   Test CorrAns  key_resp_3.keys\n",
      "0                                   NaN     NaN              NaN\n",
      "1                                   NaN     NaN              NaN\n",
      "2                                   NaN     NaN              NaN\n",
      "3                                   NaN     NaN              NaN\n",
      "4                                   NaN     NaN              NaN\n",
      "..                                  ...     ...              ...\n",
      "170  Test/Block2/6/Test_Cb_Event_13.jpg     2.0              4.0\n",
      "171  Test/Block2/1/Test_Ab_Event_21.jpg     1.0              1.0\n",
      "172  Test/Block2/4/Test_Bc_Event_14.jpg     1.0              2.0\n",
      "173  Test/Block2/1/Test_Ab_Event_17.jpg     1.0              3.0\n",
      "174                                 NaN     NaN              NaN\n",
      "\n",
      "[175 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "dfx= data_df[[\"Test\", \"CorrAns\",\"key_resp_3.keys\"]]\n",
    "print(dfx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "dc152e79",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                   Test CorrAns  key_resp_3.keys\n",
      "15   Test/Block1/2/Test_Ac_Event_07.jpg     4.0              1.0\n",
      "16   Test/Block1/5/Test_Ca_Event_08.jpg     4.0              3.0\n",
      "17   Test/Block1/3/Test_Ba_Event_12.jpg     2.0              2.0\n",
      "18   Test/Block1/3/Test_Ba_Event_09.jpg     3.0              4.0\n",
      "19   Test/Block1/1/Test_Ab_Event_03.jpg     3.0              4.0\n",
      "..                                  ...     ...              ...\n",
      "169  Test/Block2/2/Test_Ac_Event_13.jpg     2.0              3.0\n",
      "170  Test/Block2/6/Test_Cb_Event_13.jpg     2.0              4.0\n",
      "171  Test/Block2/1/Test_Ab_Event_21.jpg     1.0              1.0\n",
      "172  Test/Block2/4/Test_Bc_Event_14.jpg     1.0              2.0\n",
      "173  Test/Block2/1/Test_Ab_Event_17.jpg     1.0              3.0\n",
      "\n",
      "[144 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "dfx=dfx.dropna()\n",
    "print(dfx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f0a4c1e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                   Test CorrAns  key_resp_3.keys\n",
      "0    Test/Block1/2/Test_Ac_Event_07.jpg     4.0              1.0\n",
      "1    Test/Block1/5/Test_Ca_Event_08.jpg     4.0              3.0\n",
      "2    Test/Block1/3/Test_Ba_Event_12.jpg     2.0              2.0\n",
      "3    Test/Block1/3/Test_Ba_Event_09.jpg     3.0              4.0\n",
      "4    Test/Block1/1/Test_Ab_Event_03.jpg     3.0              4.0\n",
      "..                                  ...     ...              ...\n",
      "139  Test/Block2/2/Test_Ac_Event_13.jpg     2.0              3.0\n",
      "140  Test/Block2/6/Test_Cb_Event_13.jpg     2.0              4.0\n",
      "141  Test/Block2/1/Test_Ab_Event_21.jpg     1.0              1.0\n",
      "142  Test/Block2/4/Test_Bc_Event_14.jpg     1.0              2.0\n",
      "143  Test/Block2/1/Test_Ab_Event_17.jpg     1.0              3.0\n",
      "\n",
      "[144 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "dfx = dfx.reset_index(drop=True)\n",
    "print(dfx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "12c632ee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                   Test CorrAns  key_resp_3.keys Testname  \\\n",
      "0    Test/Block1/2/Test_Ac_Event_07.jpg     4.0              1.0     Test   \n",
      "1    Test/Block1/5/Test_Ca_Event_08.jpg     4.0              3.0     Test   \n",
      "2    Test/Block1/3/Test_Ba_Event_12.jpg     2.0              2.0     Test   \n",
      "3    Test/Block1/3/Test_Ba_Event_09.jpg     3.0              4.0     Test   \n",
      "4    Test/Block1/1/Test_Ab_Event_03.jpg     3.0              4.0     Test   \n",
      "..                                  ...     ...              ...      ...   \n",
      "139  Test/Block2/2/Test_Ac_Event_13.jpg     2.0              3.0     Test   \n",
      "140  Test/Block2/6/Test_Cb_Event_13.jpg     2.0              4.0     Test   \n",
      "141  Test/Block2/1/Test_Ab_Event_21.jpg     1.0              1.0     Test   \n",
      "142  Test/Block2/4/Test_Bc_Event_14.jpg     1.0              2.0     Test   \n",
      "143  Test/Block2/1/Test_Ab_Event_17.jpg     1.0              3.0     Test   \n",
      "\n",
      "      Block Number              FileName  \n",
      "0    Block1      2  Test_Ac_Event_07.jpg  \n",
      "1    Block1      5  Test_Ca_Event_08.jpg  \n",
      "2    Block1      3  Test_Ba_Event_12.jpg  \n",
      "3    Block1      3  Test_Ba_Event_09.jpg  \n",
      "4    Block1      1  Test_Ab_Event_03.jpg  \n",
      "..      ...    ...                   ...  \n",
      "139  Block2      2  Test_Ac_Event_13.jpg  \n",
      "140  Block2      6  Test_Cb_Event_13.jpg  \n",
      "141  Block2      1  Test_Ab_Event_21.jpg  \n",
      "142  Block2      4  Test_Bc_Event_14.jpg  \n",
      "143  Block2      1  Test_Ab_Event_17.jpg  \n",
      "\n",
      "[144 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "dfx[['Testname', 'Block', 'Number', 'FileName']]=dfx['Test'].str.split('/', expand=True)\n",
    "print(dfx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "17c4edc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                   Test CorrAns  key_resp_3.keys Testname  \\\n",
      "0    Test/Block1/2/Test_Ac_Event_07.jpg     4.0              1.0     Test   \n",
      "1    Test/Block1/5/Test_Ca_Event_08.jpg     4.0              3.0     Test   \n",
      "2    Test/Block1/3/Test_Ba_Event_12.jpg     2.0              2.0     Test   \n",
      "3    Test/Block1/3/Test_Ba_Event_09.jpg     3.0              4.0     Test   \n",
      "4    Test/Block1/1/Test_Ab_Event_03.jpg     3.0              4.0     Test   \n",
      "..                                  ...     ...              ...      ...   \n",
      "139  Test/Block2/2/Test_Ac_Event_13.jpg     2.0              3.0     Test   \n",
      "140  Test/Block2/6/Test_Cb_Event_13.jpg     2.0              4.0     Test   \n",
      "141  Test/Block2/1/Test_Ab_Event_21.jpg     1.0              1.0     Test   \n",
      "142  Test/Block2/4/Test_Bc_Event_14.jpg     1.0              2.0     Test   \n",
      "143  Test/Block2/1/Test_Ab_Event_17.jpg     1.0              3.0     Test   \n",
      "\n",
      "      Block Number              FileName no use Combinations  Event  \\\n",
      "0    Block1      2  Test_Ac_Event_07.jpg   Test           Ac  Event   \n",
      "1    Block1      5  Test_Ca_Event_08.jpg   Test           Ca  Event   \n",
      "2    Block1      3  Test_Ba_Event_12.jpg   Test           Ba  Event   \n",
      "3    Block1      3  Test_Ba_Event_09.jpg   Test           Ba  Event   \n",
      "4    Block1      1  Test_Ab_Event_03.jpg   Test           Ab  Event   \n",
      "..      ...    ...                   ...    ...          ...    ...   \n",
      "139  Block2      2  Test_Ac_Event_13.jpg   Test           Ac  Event   \n",
      "140  Block2      6  Test_Cb_Event_13.jpg   Test           Cb  Event   \n",
      "141  Block2      1  Test_Ab_Event_21.jpg   Test           Ab  Event   \n",
      "142  Block2      4  Test_Bc_Event_14.jpg   Test           Bc  Event   \n",
      "143  Block2      1  Test_Ab_Event_17.jpg   Test           Ab  Event   \n",
      "\n",
      "    Eventnumber  \n",
      "0        07.jpg  \n",
      "1        08.jpg  \n",
      "2        12.jpg  \n",
      "3        09.jpg  \n",
      "4        03.jpg  \n",
      "..          ...  \n",
      "139      13.jpg  \n",
      "140      13.jpg  \n",
      "141      21.jpg  \n",
      "142      14.jpg  \n",
      "143      17.jpg  \n",
      "\n",
      "[144 rows x 11 columns]\n"
     ]
    }
   ],
   "source": [
    "dfx[['no use', 'Combinations', 'Event', 'Eventnumber']] = dfx['FileName'].str.split('_', expand=True)\n",
    "print(dfx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a3f50357",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                   Test CorrAns  key_resp_3.keys Number  \\\n",
      "0    Test/Block1/2/Test_Ac_Event_07.jpg     4.0              1.0      2   \n",
      "1    Test/Block1/5/Test_Ca_Event_08.jpg     4.0              3.0      5   \n",
      "2    Test/Block1/3/Test_Ba_Event_12.jpg     2.0              2.0      3   \n",
      "3    Test/Block1/3/Test_Ba_Event_09.jpg     3.0              4.0      3   \n",
      "4    Test/Block1/1/Test_Ab_Event_03.jpg     3.0              4.0      1   \n",
      "..                                  ...     ...              ...    ...   \n",
      "139  Test/Block2/2/Test_Ac_Event_13.jpg     2.0              3.0      2   \n",
      "140  Test/Block2/6/Test_Cb_Event_13.jpg     2.0              4.0      6   \n",
      "141  Test/Block2/1/Test_Ab_Event_21.jpg     1.0              1.0      1   \n",
      "142  Test/Block2/4/Test_Bc_Event_14.jpg     1.0              2.0      4   \n",
      "143  Test/Block2/1/Test_Ab_Event_17.jpg     1.0              3.0      1   \n",
      "\n",
      "      Block              FileName Combinations  \n",
      "0    Block1  Test_Ac_Event_07.jpg           Ac  \n",
      "1    Block1  Test_Ca_Event_08.jpg           Ca  \n",
      "2    Block1  Test_Ba_Event_12.jpg           Ba  \n",
      "3    Block1  Test_Ba_Event_09.jpg           Ba  \n",
      "4    Block1  Test_Ab_Event_03.jpg           Ab  \n",
      "..      ...                   ...          ...  \n",
      "139  Block2  Test_Ac_Event_13.jpg           Ac  \n",
      "140  Block2  Test_Cb_Event_13.jpg           Cb  \n",
      "141  Block2  Test_Ab_Event_21.jpg           Ab  \n",
      "142  Block2  Test_Bc_Event_14.jpg           Bc  \n",
      "143  Block2  Test_Ab_Event_17.jpg           Ab  \n",
      "\n",
      "[144 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "dfx = dfx[['Test', 'CorrAns', 'key_resp_3.keys', 'Number','Block', 'FileName', 'Combinations']]\n",
    "print(dfx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9999f30a",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndexError",
     "evalue": "list index out of range",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)",
      "Input \u001b[0;32mIn [25]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m x \u001b[38;5;129;01min\u001b[39;00m answers:\n\u001b[0;32m----> 2\u001b[0m         \u001b[38;5;28;01mif\u001b[39;00m x \u001b[38;5;241m==\u001b[39m \u001b[43mc_answers\u001b[49m\u001b[43m[\u001b[49m\u001b[43mcounter\u001b[49m\u001b[43m]\u001b[49m:\n\u001b[1;32m      3\u001b[0m             right_answers\u001b[38;5;241m.\u001b[39mappend(\u001b[38;5;241m1\u001b[39m)\n\u001b[1;32m      4\u001b[0m         \u001b[38;5;28;01melse\u001b[39;00m:\n",
      "\u001b[0;31mIndexError\u001b[0m: list index out of range"
     ]
    }
   ],
   "source": [
    "for x in answers:\n",
    "        if x == c_answers[counter]:\n",
    "            right_answers.append(1)\n",
    "        else:\n",
    "            right_answers.append(0)\n",
    "        counter +=1\n",
    "  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "757ea88e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
